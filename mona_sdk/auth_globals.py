from os import environ

from mona_sdk.misc_utils import get_boolean_value_for_env_var

ERRORS = "errors"

EXPIRES_IN_FRONTEGG = "expiresIn"
EXPIRED_IN_OIDC = "expires_in"

ACCESS_TOKEN_IN_OIDC = "access_token"
ACCESS_TOKEN_IN_FRONTEGG = "accessToken"

REFRESH_TOKEN = "refreshToken"
TIME_TO_REFRESH = "timeToRefresh"

IS_AUTHENTICATED = "isAuthenticated"

MANUAL_TOKEN_STRING_FOR_API_KEY = "manual_token_mode"

# todo we'll need to remove usages of the old way of doing this.
OIDC_AUTH_MODE = "OIDC"
FRONTEGG_AUTH_MODE = "FRONTEGG"
NO_AUTH_MODE = "NO_AUTH"

AUTH_MODE = environ.get("AUTH_MODE", FRONTEGG_AUTH_MODE)

AUTH_MODE_TO_USE_REFRESH_TOKENS_DEFAULT = {
    FRONTEGG_AUTH_MODE: True,
    OIDC_AUTH_MODE: False,
}
USE_REFRESH_TOKENS_DEFAULT = AUTH_MODE_TO_USE_REFRESH_TOKENS_DEFAULT[AUTH_MODE]
USE_REFRESH_TOKENS = get_boolean_value_for_env_var(
    "MONA_SDK_USE_REFRESH_TOKENS", USE_REFRESH_TOKENS_DEFAULT
)

AUTH_MODE_TO_ACCESS_TOKEN_STRING = {
    FRONTEGG_AUTH_MODE: ACCESS_TOKEN_IN_FRONTEGG,
    OIDC_AUTH_MODE: ACCESS_TOKEN_IN_OIDC,
}
ACCESS_TOKEN = ACCESS_TOKEN_IN_OIDC if OIDC_AUTH_MODE else ACCESS_TOKEN_IN_FRONTEGG

AUTH_MODE_TO_EXPIRES_KEY = {
    FRONTEGG_AUTH_MODE: EXPIRES_IN_FRONTEGG,
    OIDC_AUTH_MODE: EXPIRED_IN_OIDC,
}
EXPIRES_KEY = AUTH_MODE_TO_EXPIRES_KEY[AUTH_MODE]